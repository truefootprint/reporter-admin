{"version":3,"sources":["extensions/auth_provider.js","extensions/http_client.js","consts.js","extensions/with_file_upload.js","extensions/with_locale.js","components/conditional/Conditional.jsx","extensions/create_resource.js","components/unit_input/UnitInput.jsx","resources/questions.js","resources/activities.js","components/question_input/QuestionInput.jsx","resources/completion_questions.js","resources/default_activities.js","resources/default_expected_values.js","resources/default_questions.js","resources/default_visibilities.js","resources/default_roles.js","resources/documents.js","resources/expected_values.js","resources/follow_up_activities.js","resources/involvements.js","resources/issue_notes.js","resources/issues.js","resources/multi_choice_options.js","resources/personalised_text.js","resources/programmes.js","resources/project_activities.js","resources/project_questions.js","resources/project_roles.js","resources/project_types.js","resources/projects.js","resources/registrations.js","resources/responses.js","resources/roles.js","resources/source_materials.js","resources/topics.js","resources/units.js","resources/user_interface_text.js","resources/users.js","resources/visibilities.js","App.js","serviceWorker.js","index.js"],"names":["authProvider","type","params","AUTH_LOGIN","localStorage","setItem","btoa","username","password","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","status","reject","AUTH_CHECK","getItem","httpClient","url","options","headers","Headers","Accept","token","locale","set","fetchUtils","fetchJson","HOST","window","location","hostname","withFileUpload","requestHandler","resource","data","photo","form","FormData","undefined","rawFile","name","order","question_id","text","append","fetch","id","method","body","then","response","json","console","log","entries","pair","file","withLocale","filter","Conditional","when","children","FormDataConsumer","f","formData","props","formFields","showLocale","newRecord","pathname","match","SimpleForm","TextField","source","TextInput","defaultValue","filters","Filter","label","alwaysOn","createResource","gridFields","edit","Edit","create","Create","list","List","perPage","filterDefaultValues","Datagrid","rowClick","DateField","showTime","grid","UnitInput","ReferenceInput","reference","allowEmpty","SelectInput","optionText","unit_type","RadioButtonGroupInput","BooleanInput","d","NumberInput","TypeSelector","UnitSelector","ReferenceField","NumberField","BooleanField","linkType","QuestionInput","topic_id","TopicSelector","QuestionSelector","FileInput","FileField","title","LongTextInput","validate","required","ImageField","ImageInput","accept","multiline","dataProvider","jsonServerProvider","App","Admin","Resource","activities","completion_questions","default_activities","default_expected_values","default_questions","default_roles","default_visibilities","documents","expected_values","follow_up_activities","involvements","issue_notes","issues","multi_choice_options","personalised_text","programmes","project_activities","project_questions","project_roles","project_types","projects","questions","registrations","responses","roles","source_materials","topics","units","user_interface_text","users","visibilities","Boolean","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fed0bf17.chunk.js","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from \"react-admin\";\n\nconst authProvider = (type, params) => {\n  if (type === AUTH_LOGIN) {\n    localStorage.setItem(\"token\", btoa(`${params.username}:${params.password}`));\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem(\"token\");\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_ERROR) {\n    const { status } = params;\n    if (status === 401 || status === 403) {\n        localStorage.removeItem(\"token\");\n        return Promise.reject();\n    }\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem(\"token\")\n        ? Promise.resolve()\n        : Promise.reject();\n  }\n\n  return Promise.reject(\"Unknown method\");\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n\n  const token = localStorage.getItem(\"token\");\n  const locale = localStorage.getItem(\"locale\");\n\n  if (token) {\n    options.headers.set(\"Authorization\", `Basic ${token}`);\n  }\n\n  if (locale) {\n    options.headers.set(\"Accept-Language\", locale);\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default httpClient;\n","let host;\n\nif (window.location.hostname === \"localhost\") {\n  host = \"http://localhost:3000\";\n} else {\n  host = \"https://field-backend.truefootprint.com\";\n}\n\nexport const HOST = host;\n","import { HOST } from \"../consts\"\nimport { v4 as uuidv4 } from 'uuid';\n\n  const withFileUpload = requestHandler => (type, resource, params) => {\n    \n    if ((type === \"CREATE\" || type === \"UPDATE\") && typeof params.data.photo !== \"undefined\") {\n        let form = new FormData();\n\n        if (params.data.photo.rawFile !== undefined){\n          let rawFile = params.data.photo.rawFile;        \n          form.set(\"photo\", rawFile); \n          form.set(\"name\", rawFile.name);\n        }\n        form.set(\"order\", params.data.order);\n        form.set(\"question_id\", params.data.question_id);\n        form.set(\"text\", params.data.text);\n\n        const token = localStorage.getItem(\"token\");\n        const headers = new Headers();\n\n        headers.append(\"Authorization\", `Basic ${token}`);\n        headers.append(\"Accept-Language\", params.data.locale)\n        \n        if (type === \"UPDATE\"){\n          return fetch(`${HOST}/${resource}/${params.data.id}`, { method: \"PUT\", body: form, headers: headers })\n          .then((response) => response.json())\n          .then((json) => ( { data: { id: json.id }} ))\n        } \n        if (type === \"CREATE\") {\n          console.log(\"CREATE IF\");\n          for (var pair of form.entries())\n          {\n          console.log(pair[0]+ ', '+ pair[1]); \n          }\n          return fetch(`${HOST}/${resource}`, { method: \"POST\", body: form, headers: headers })\n          .then((response) => response.json())\n          .then((json) => ( { data: { id: json.id }} ))\n        }\n    }\n\n      if ((type === \"CREATE\" || type === \"UPDATE\") && typeof params.data.file !== \"undefined\") {\n          let rawFile = params.data.file.rawFile;\n          let form = new FormData();\n  \n          form.set(\"file\", rawFile);\n          form.set(\"name\", rawFile.name);\n  \n          const token = localStorage.getItem(\"token\");\n          const headers = new Headers();\n  \n          headers.append(\"Authorization\", `Basic ${token}`);\n  \n          return fetch(`${HOST}/${resource}`, { method: \"POST\", body: form, headers: headers })\n            .then((response) => response.json())\n            .then((json) => ( { data: { id: json.id }} ))\n      }\n  \n      return requestHandler(type, resource, params);\n  };\n  \n  export default withFileUpload;","const withLocale = requestHandler => (type, resource, params) => {\n  const locale = (params.data || {}).locale || (params.filter || {}).locale;\n\n  if (typeof locale !== \"undefined\") {\n    localStorage.setItem(\"locale\", locale);\n  }\n\n  return requestHandler(type, resource, params);\n};\n\nexport default withLocale;\n","import React from \"react\";\nimport { FormDataConsumer } from \"react-admin\";\n\nconst Conditional = ({ when, children }) => (\n  <FormDataConsumer>{f =>\n    f && f.formData && when(f.formData) && children\n  }</FormDataConsumer>\n);\n\nexport default Conditional;\n","import React from \"react\";\nimport { SimpleForm, TextField, DateField, Datagrid, Edit, Create, List, Filter, TextInput } from \"react-admin\";\n\nconst form = (props, formFields, showLocale) => {\n  const newRecord = props.location.pathname.match(/create/);\n  const locale = () => localStorage.getItem(\"locale\") || \"en\";\n  return (\n    <SimpleForm>\n      {newRecord ? null : <TextField source=\"id\" />}\n      {showLocale ? <TextInput source=\"locale\" defaultValue={locale} /> : null}\n      {formFields(props)}\n      {newRecord ? null : <TextField source=\"created_at\" />}\n      {newRecord ? null : <TextField source=\"updated_at\" />}\n    </SimpleForm>\n  );\n};\n\nconst grid = (props, gridFields) => (\n  <Datagrid rowClick=\"edit\">\n    <TextField source=\"id\" />\n    {gridFields(props)}\n    <DateField source=\"created_at\" showTime />\n    <DateField source=\"updated_at\" showTime />\n  </Datagrid>\n);\n\nconst filters = (showLocale) => (\n  <Filter>\n    {showLocale && <TextInput label=\"Locale\" source=\"locale\" alwaysOn />}\n  </Filter>\n);\n\nconst createResource = ({ name, formFields, gridFields, showLocale }) => ({\n  name: name,\n  edit: (props) => <Edit {...props}>{form(props, formFields, showLocale)}</Edit>,\n  create: (props) => <Create {...props}>{form(props, formFields, showLocale)}</Create>,\n  list: (props) => (\n    <List {...props} perPage={100} filters={filters(showLocale)} filterDefaultValues={{ locale: \"en\" }}>\n      {grid(props, gridFields)}\n    </List>\n  ),\n});\n\nexport default createResource;\n","import React from \"react\";\nimport { ReferenceInput, SelectInput, FormDataConsumer } from \"react-admin\";\n\nconst UnitInput = {};\n\nUnitInput.TypeSelector = () => (\n  <ReferenceInput source=\"unit_type\" reference=\"unit_types\" allowEmpty>\n    <SelectInput optionText=\"id\" />\n  </ReferenceInput>\n);\n\nUnitInput.UnitSelector = () => (\n  <FormDataConsumer>{f => f && f.formData &&\n    <ReferenceInput source=\"unit_id\" reference=\"units\" perPage={100} filter={{ type: f.formData.unit_type }} allowEmpty>\n      <SelectInput optionText=\"official_name\" />\n    </ReferenceInput>\n  }</FormDataConsumer>\n);\n\nexport default UnitInput;\n","import React from \"react\";\nimport { TextInput, ReferenceInput, SelectInput, RadioButtonGroupInput, NumberInput, BooleanInput } from \"react-admin\";\nimport { TextField, ReferenceField, NumberField, BooleanField } from \"react-admin\";\nimport Conditional from \"../components/conditional\";\nimport createResource from \"../extensions/create_resource\";\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"questions\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"text\" />,\n\n    <ReferenceInput source=\"topic_id\" reference=\"topics\" perPage={100}>\n      <SelectInput />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"type\" reference=\"question_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <BooleanInput label=\"Isssues Possible\" source=\"issues_possible\" />,\n\n    <Conditional when={d => d.type === \"FreeTextQuestion\"}>\n      <NumberInput source=\"expected_length\" />\n    </Conditional>,\n\n    <Conditional when={d => d.type === \"MultiChoiceQuestion\"}>\n      <BooleanInput source=\"multiple_answers\" />\n    </Conditional>,\n\n    <ReferenceInput source=\"data_type\" reference=\"question_data_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"text\" />,\n\n    <ReferenceField source=\"topic_id\" reference=\"topics\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"type\" />,\n    <NumberField source=\"expected_length\" />,\n    <BooleanField source=\"multiple_answers\" />,\n    <TextField source=\"data_type\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"activities\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, SelectInput, FormDataConsumer } from \"react-admin\";\n\nconst QuestionInput = {};\n\nQuestionInput.TopicSelector = () => (\n  <ReferenceInput source=\"topic_id\" reference=\"topics\">\n    <SelectInput optionText=\"name\" />\n  </ReferenceInput>\n);\n\nQuestionInput.QuestionSelector = () => (\n  <FormDataConsumer>{f => f && f.formData &&\n    <ReferenceInput source=\"question_id\" reference=\"questions\" perPage={100} filter={{ topic_id: f.formData.topic_id }}>\n      <SelectInput optionText=\"text\" />\n    </ReferenceInput>\n  }</FormDataConsumer>\n);\n\nexport default QuestionInput;\n","import React from \"react\";\nimport { ReferenceField, TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"completion_questions\",\n\n  formFields: (props) => [\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <TextInput source=\"completion_value\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <TextField source=\"completion_value\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_type_id\" reference=\"project_types\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, ReferenceField, SelectInput, TextField, TextInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport QuestionInput from \"../components/question_input\";\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"default_expected_values\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" allowEmpty perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"value\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\" allowEmpty>\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"default_questions\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, RadioButtonGroupInput, NumberField, SelectInput, NumberInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_visibilities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"default_visibility_subject_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"default_roles\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_type_id\" reference=\"project_types\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />\n  ],\n});\n","import React from \"react\";\nimport { FileInput, FileField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"documents\",\n\n  formFields: (props) => [\n    <FileInput source=\"file\">\n      <FileField source=\"url\" title=\"name\" />\n    </FileInput>,\n  ],\n\n  gridFields: (props) => [\n    <FileField source=\"file.url\" title=\"file.name\" label=\"File\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, NumberInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"expected_values\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <NumberInput label=\"Project question id\" source=\"project_question_id\" />,\n\n    <TextInput source=\"value\" />,\n    <TextInput source=\"text\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_question_id\" reference=\"project_questions\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Question\" source=\"project_question_id\" reference=\"project_questions\" linkType={false}>\n      <ReferenceField source=\"question_id\" reference=\"questions\" linkType={false}>\n        <TextField source=\"text\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n    <TextField source=\"text\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty>\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty>\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, SelectInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"follow_up_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"follow_up_activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"follow_up_activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, NumberInput, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"involvements\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project activity id\" source=\"project_activity_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_activity_id\" reference=\"project_activities\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { BooleanInput, TextInput, ReferenceInput, SelectInput } from \"react-admin\";\nimport { BooleanField, TextField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"issue_notes\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"issue_id\" reference=\"issues\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"text\" />,\n    <TextInput source=\"photos_json\" />,\n    <BooleanInput source=\"resolved\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"issue_id\" reference=\"issues\">\n      <TextField source=\"uuid\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"text\" />,\n    <TextField source=\"photos_json\" />,\n    <BooleanField source=\"resolved\" />,\n  ],\n});\n","import React from \"react\";\nimport { NumberInput, LongTextInput, ReferenceInput, SelectInput, RadioButtonGroupInput } from \"react-admin\";\nimport { NumberField, TextField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"issues\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"issue_subject_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <LongTextInput source=\"description\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"uuid\" />,\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"description\" />,\n  ],\n});\n","import React from \"react\";\nimport { required, ImageField, ImageInput, TextInput, TextField, ReferenceInput, SelectInput, NumberInput, NumberField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\n\nexport default createResource({\n  name: \"multi_choice_options\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"question_id\" \n    reference=\"questions\" filter={{ type: \"MultiChoiceQuestion\" }} \n    perPage={100}>\n      <SelectInput optionText=\"text\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"text\" validate={[required()]} />,\n\n    <NumberInput source=\"order\" />,\n    <ImageField source=\"photo\" title=\"title\" />,\n    <ImageInput source=\"photo\" label=\"Related pictures\" accept=\"image/*\">\n        <ImageField source=\"photo\" title=\"title\" />\n    </ImageInput>\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <TextField source=\"text\" />,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, ReferenceInput, ReferenceField, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"personalised_text\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"user_interface_text_id\" reference=\"user_interface_text\" perPage={100}>\n      <SelectInput optionText=\"key\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"project_role_id\" />,\n    <TextInput source=\"value\" multiline />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"user_interface_text_id\" reference=\"user_interface_text\">\n      <TextField source=\"key\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"project_id\" reference=\"projects\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Role\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"role_id\" reference=\"roles\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, LongTextInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"programmes\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <LongTextInput source=\"description\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n    <TextField source=\"description\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, SelectInput, ReferenceField, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_activities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_id\" reference=\"projects\" perPage={100}>\n      <SelectInput />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"activity_id\" reference=\"activities\" perPage={100}>\n      <SelectInput />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_id\" reference=\"projects\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"activity_id\" reference=\"activities\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { NumberInput, TextField, ReferenceField, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\nimport QuestionInput from \"../components/question_input\";\n\nexport default createResource({\n  name: \"project_questions\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project activity id\" source=\"project_activity_id\" />,\n\n    <QuestionInput.TopicSelector />,\n    <QuestionInput.QuestionSelector />,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_activity_id\" reference=\"project_activities\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"question_id\" reference=\"questions\">\n      <TextField source=\"text\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_activity_id\" reference=\"project_activities\" linkType={false}>\n      <ReferenceField source=\"project_id\" reference=\"projects\" linkType={false}>\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Activity\" source=\"project_activity_id\" reference=\"project_activities\" linkType={false}>\n      <ReferenceField source=\"activity_id\" reference=\"activities\" linkType={false}>\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, ReferenceField, SelectInput, NumberInput, NumberField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_roles\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"project_id\" reference=\"projects\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"role_id\" reference=\"roles\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"order\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_id\" reference=\"projects\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"role_id\" reference=\"roles\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <NumberField source=\"order\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"project_types\",\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, ReferenceInput, SelectInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"projects\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <ReferenceInput source=\"programme_id\" reference=\"programmes\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <ReferenceInput source=\"project_type_id\" reference=\"project_types\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"programme_id\" reference=\"programmes\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"project_type_id\" reference=\"project_types\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, TextInput, ReferenceInput, ReferenceField, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"registrations\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"project_role_id\" />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <ReferenceField label=\"Project\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"project_id\" reference=\"projects\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n\n    <ReferenceField label=\"Role\" source=\"project_role_id\" reference=\"project_roles\">\n      <ReferenceField source=\"role_id\" reference=\"roles\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField, NumberInput, ReferenceInput, SelectInput, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nimport UnitInput from \"../components/unit_input\";\n\nexport default createResource({\n  name: \"responses\",\n\n  formFields: (props) => [\n    <NumberInput label=\"Project question id\" source=\"project_question_id\" />,\n\n    <ReferenceInput source=\"user_id\" reference=\"users\" perPage={100}>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"value\" />,\n\n    <UnitInput.TypeSelector />,\n    <UnitInput.UnitSelector />,\n  ],\n\n  gridFields: (props) => [\n    <ReferenceField source=\"project_question_id\" reference=\"project_questions\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"user_id\" reference=\"users\">\n      <TextField source=\"name\" />\n    </ReferenceField>,\n\n    <TextField source=\"value\" />,\n\n    <ReferenceField label=\"Unit type\" source=\"unit_id\" reference=\"units\" linkType={false} allowEmpty >\n      <TextField source=\"type\" />\n    </ReferenceField>,\n\n    <ReferenceField source=\"unit_id\" reference=\"units\" allowEmpty >\n      <TextField source=\"official_name\" />\n    </ReferenceField>,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"roles\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <TextInput source=\"display_name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { ReferenceInput, RadioButtonGroupInput, SelectInput, NumberInput } from \"react-admin\";\nimport { TextField, NumberField, ReferenceField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"source_materials\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"source_material_subject_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"document_id\" reference=\"documents\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput source=\"page\" allowEmpty />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceField source=\"document_id\" reference=\"documents\">\n      <TextField source=\"id\" />\n    </ReferenceField>,\n\n    <NumberField source=\"page\" allowEmpty />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"topics\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, TextInput, ReferenceInput, SelectInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"units\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"official_name\" />,\n\n    <ReferenceInput source=\"type\" reference=\"unit_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <TextInput source=\"singular\" />,\n    <TextInput source=\"plural\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"official_name\" />,\n    <TextField source=\"type\" />,\n    <TextField source=\"singular\" />,\n    <TextField source=\"plural\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"user_interface_text\",\n  showLocale: true,\n\n  formFields: (props) => [\n    <TextInput source=\"key\" />,\n    <TextInput source=\"value\" multiline />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"key\" />,\n    <TextField source=\"value\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextInput, TextField } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"users\",\n\n  formFields: (props) => [\n    <TextInput source=\"name\" />,\n    <TextInput source=\"country_code\" />,\n    <TextInput source=\"phone_number\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"name\" />,\n    <TextField source=\"country_code\" />,\n    <TextField source=\"phone_number\" />,\n  ],\n});\n","import React from \"react\";\nimport { TextField, ReferenceInput, RadioButtonGroupInput, NumberField, SelectInput, NumberInput } from \"react-admin\";\nimport createResource from \"../extensions/create_resource\";\n\nexport default createResource({\n  name: \"visibilities\",\n\n  formFields: (props) => [\n    <ReferenceInput source=\"subject_type\" reference=\"visibility_subject_types\" perPage={100}>\n      <SelectInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Subject id\" source=\"subject_id\" />,\n\n    <ReferenceInput source=\"visible_to_type\" reference=\"visibility_visible_to_types\" perPage={100}>\n      <RadioButtonGroupInput optionText=\"id\" />\n    </ReferenceInput>,\n\n    <NumberInput label=\"Visible to id\" source=\"visible_to_id\" />,\n  ],\n\n  gridFields: (props) => [\n    <TextField source=\"subject_type\" />,\n    <NumberField label=\"Subject id\" source=\"subject_id\" />,\n\n    <TextField source=\"visible_to_type\" />,\n    <NumberField label=\"Visible to id\" source=\"visible_to_id\" />,\n  ],\n});\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport authProvider from \"./extensions/auth_provider\";\nimport httpClient from \"./extensions/http_client\";\nimport withFileUpload from \"./extensions/with_file_upload\";\nimport withLocale from \"./extensions/with_locale\";\nimport { HOST } from \"./consts\";\n\nimport questions from \"./resources/questions\";\nimport activities from \"./resources/activities\";\nimport completion_questions from \"./resources/completion_questions\";\nimport default_activities from \"./resources/default_activities\";\nimport default_expected_values from \"./resources/default_expected_values\";\nimport default_questions from \"./resources/default_questions\";\nimport default_visibilities from \"./resources/default_visibilities\";\nimport default_roles from \"./resources/default_roles\";\nimport documents from \"./resources/documents\";\nimport expected_values from \"./resources/expected_values\";\nimport follow_up_activities from \"./resources/follow_up_activities\";\nimport involvements from \"./resources/involvements\";\nimport issue_notes from \"./resources/issue_notes\";\nimport issues from \"./resources/issues\";\nimport multi_choice_options from \"./resources/multi_choice_options\";\nimport personalised_text from \"./resources/personalised_text\";\nimport programmes from \"./resources/programmes\";\nimport project_activities from \"./resources/project_activities\";\nimport project_questions from \"./resources/project_questions\";\nimport project_roles from \"./resources/project_roles\";\nimport project_types from \"./resources/project_types\";\nimport projects from \"./resources/projects\";\nimport registrations from \"./resources/registrations\";\nimport responses from \"./resources/responses\";\nimport roles from \"./resources/roles\";\nimport source_materials from \"./resources/source_materials\";\nimport topics from \"./resources/topics\";\nimport units from \"./resources/units\";\nimport user_interface_text from \"./resources/user_interface_text\";\nimport users from \"./resources/users\";\nimport visibilities from \"./resources/visibilities\";\n\nconst dataProvider = withLocale(withFileUpload(jsonServerProvider(HOST, httpClient)));\n\nconst App = () => (\n  <Admin dataProvider={dataProvider} authProvider={authProvider}>\n    <Resource {...activities} />\n    <Resource {...completion_questions} />\n    <Resource {...default_activities} />\n    <Resource {...default_expected_values} />\n    <Resource {...default_questions} />\n    <Resource {...default_roles} />\n    <Resource {...default_visibilities} />\n    <Resource {...documents} />\n    <Resource {...expected_values} />\n    <Resource {...follow_up_activities} />\n    <Resource {...involvements} />\n    <Resource {...issue_notes} />\n    <Resource {...issues} />\n    <Resource {...multi_choice_options} />\n    <Resource {...personalised_text} />\n    <Resource {...programmes} />\n    <Resource {...project_activities} />\n    <Resource {...project_questions} />\n    <Resource {...project_roles} />\n    <Resource {...project_types} />\n    <Resource {...projects} />\n    <Resource {...questions} />\n    <Resource {...registrations} />\n    <Resource {...responses} />\n    <Resource {...roles} />\n    <Resource {...source_materials} />\n    <Resource {...topics} />\n    <Resource {...units} />\n    <Resource {...user_interface_text} />\n    <Resource {...users} />\n    <Resource {...visibilities} />\n\n    <Resource name=\"default_visibility_subject_types\" />\n    <Resource name=\"question_types\" />\n    <Resource name=\"question_data_types\" />\n    <Resource name=\"issue_subject_types\" />\n    <Resource name=\"source_material_subject_types\" />\n    <Resource name=\"visibility_subject_types\" />\n    <Resource name=\"visibility_visible_to_types\" />\n    <Resource name=\"unit_types\" />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}